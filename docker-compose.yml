version: '3'
networks:
  docker-network:
    driver: bridge
services:
  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - docker-network
  report-api:
    image: sitespeedio/node:ubuntu-20.04-nodejs-18.12.0
    volumes:
      - ./report-api/src:/report-api/src
      - ./report-api/package.json:/report-api/package.json
      - ./report-api/package-lock.json:/report-api/package-lock.json
      - ./report-api/setup_exporter.sh:/report-api/setup_exporter.sh
      - ./report-api/tsconfig.json:/report-api/tsconfig.json
      - ./report-api/tsconfig.build.json:/report-api/tsconfig.build.json
    ports:
      - "3000:3000"
    networks:
      - docker-network
    environment:
      - REDIS_HOST=redis
    command: |
      sh -c "apt-get update && 
      apt-get install -y libfontconfig && 
      cd report-api && 
      npm ci && 
      bash setup_exporter.sh && 
      npm run build && 
      node dist/main.js"
  ui:
    image: node:18.13-alpine3.16
    volumes:
      - ./ui/src:/ui/src
      - ./ui/public:/ui/public
      - ./ui/package.json:/ui/package.json
      - ./ui/tsconfig.json:/ui/tsconfig.json
      - ./ui/webpack.config.ts:/ui/webpack.config.ts
      - ./ui/.eslintrc.json:/ui/.eslintrc.json
    ports:
      - "8080:8080"
    networks:
      - docker-network
    environment:
      - API_HOST=http://report-api:3000
    command: |
      sh -c "cd ui && 
      npm install && 
      npm run develop"
volumes:
  redis_data:
